#!/usr/bin/env bash

#       compress
# This program will compress a directory. Defaults to using gzip but can also
# compress with bz2 and zip.
# Syntax:
#   compress [-bz2/-gz/-zip] $PATH1 [$PATH2 $PATH3 ...]

set -u
set -e
if [ ! "$1" ]; then
    echo "$0: no files specified." >&2
    exit
fi

function helptext() {
    cat <<-EOF
Usage: compress [OPTION...] [FILE...]
Compress directories or files using one of several compression algorithms.

  -h, --help   display this help and exit
  -bz2         compress as a tar.bz2 archive
  -gz          compress as a tar.gz archive
  -zip         compress as a .zip archive
EOF
}

# Generates an archive name. It is either the name of the file/folder with the
# current date, or in the case of multiple files/folders being archived it is
# the name of the current directories parent with the current date. Strips any
# '.' from the file or directory name.
function arname() {
    if [[ "$#" -eq 1 ]]; then
        echo "$(basename $1 | tr -d .)-$(date +"%Y-%m-%d")"
    else
        echo "$(basename $(pwd) | tr -d .)-$(date +"%Y-%m-%d")"
    fi
}

case "$1" in
    -bz2)
        # Compress as a tar.bz2 archive.
        shift
        tar -jcvf "`arname $@`.tar.bz2" $@
        exit 0;
        ;;
    -zip)
        # Compress as a zip file.
        shift
        zip -r9 "`arname $@`.zip" $@
        exit 0
        ;;
    -gz)
        # Create a tar.gz archive.
        shift
        ;;
    -h)
        helptext
        exit
        ;;
    --help)
        helptext
        exit
        ;;
    *)
        ;;
esac

# Default case, use tar and create a tar.gz archive.
tar -zcvf "`arname $@`.tar.gz" $@
